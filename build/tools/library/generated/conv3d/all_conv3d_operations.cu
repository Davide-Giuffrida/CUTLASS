
/*
 Generated by manifest.py - Do not edit.
*/

#include "cutlass/cutlass.h"
#include "cutlass/library/library.h"
#include "cutlass/library/manifest.h"

namespace cutlass {
namespace library {

///////////////////////////////////////////////////////////////////////////////////////////////////

void initialize_cutlass_tensorop_s16816fprop3d_optimized_f16_256x128_32x3(Manifest &manifest);
void initialize_cutlass_tensorop_s16816wgrad3d_optimized_f16_256x128_32x3(Manifest &manifest);
void initialize_cutlass_tensorop_s16816dgrad3d_optimized_f16_256x128_32x3_unity_stride(Manifest &manifest);
void initialize_cutlass_tensorop_s16816dgrad3d_analytic_f16_256x128_32x3(Manifest &manifest);
void initialize_cutlass_tensorop_f16_s16816fprop3d_optimized_f16_256x128_32x3(Manifest &manifest);
void initialize_cutlass_tensorop_f16_s16816wgrad3d_optimized_f16_256x128_32x3(Manifest &manifest);
void initialize_cutlass_tensorop_f16_s16816dgrad3d_optimized_f16_256x128_32x3_unity_stride(Manifest &manifest);
void initialize_cutlass_tensorop_f16_s16816dgrad3d_analytic_f16_256x128_32x3(Manifest &manifest);
void initialize_cutlass_tensorop_h16816fprop3d_optimized_256x128_32x3(Manifest &manifest);
void initialize_cutlass_tensorop_h16816wgrad3d_optimized_256x128_32x3(Manifest &manifest);
void initialize_cutlass_tensorop_h16816dgrad3d_optimized_256x128_32x3_unity_stride(Manifest &manifest);
void initialize_cutlass_tensorop_h16816dgrad3d_analytic_256x128_32x3(Manifest &manifest);
void initialize_cutlass_tensorop_s16816fprop3d_optimized_bf16_256x128_32x3(Manifest &manifest);
void initialize_cutlass_tensorop_s16816wgrad3d_optimized_bf16_256x128_32x3(Manifest &manifest);
void initialize_cutlass_tensorop_s16816dgrad3d_optimized_bf16_256x128_32x3_unity_stride(Manifest &manifest);
void initialize_cutlass_tensorop_s16816dgrad3d_analytic_bf16_256x128_32x3(Manifest &manifest);
void initialize_cutlass_tensorop_bf16_s16816fprop3d_optimized_bf16_256x128_32x3(Manifest &manifest);
void initialize_cutlass_tensorop_bf16_s16816wgrad3d_optimized_bf16_256x128_32x3(Manifest &manifest);
void initialize_cutlass_tensorop_bf16_s16816dgrad3d_optimized_bf16_256x128_32x3_unity_stride(Manifest &manifest);
void initialize_cutlass_tensorop_bf16_s16816dgrad3d_analytic_bf16_256x128_32x3(Manifest &manifest);


//
// Entry point to construct operations
//
void initialize_all_conv3d_operations(Manifest &manifest) {
  initialize_cutlass_tensorop_s16816fprop3d_optimized_f16_256x128_32x3(manifest);
  initialize_cutlass_tensorop_s16816wgrad3d_optimized_f16_256x128_32x3(manifest);
  initialize_cutlass_tensorop_s16816dgrad3d_optimized_f16_256x128_32x3_unity_stride(manifest);
  initialize_cutlass_tensorop_s16816dgrad3d_analytic_f16_256x128_32x3(manifest);
  initialize_cutlass_tensorop_f16_s16816fprop3d_optimized_f16_256x128_32x3(manifest);
  initialize_cutlass_tensorop_f16_s16816wgrad3d_optimized_f16_256x128_32x3(manifest);
  initialize_cutlass_tensorop_f16_s16816dgrad3d_optimized_f16_256x128_32x3_unity_stride(manifest);
  initialize_cutlass_tensorop_f16_s16816dgrad3d_analytic_f16_256x128_32x3(manifest);
  initialize_cutlass_tensorop_h16816fprop3d_optimized_256x128_32x3(manifest);
  initialize_cutlass_tensorop_h16816wgrad3d_optimized_256x128_32x3(manifest);
  initialize_cutlass_tensorop_h16816dgrad3d_optimized_256x128_32x3_unity_stride(manifest);
  initialize_cutlass_tensorop_h16816dgrad3d_analytic_256x128_32x3(manifest);
  initialize_cutlass_tensorop_s16816fprop3d_optimized_bf16_256x128_32x3(manifest);
  initialize_cutlass_tensorop_s16816wgrad3d_optimized_bf16_256x128_32x3(manifest);
  initialize_cutlass_tensorop_s16816dgrad3d_optimized_bf16_256x128_32x3_unity_stride(manifest);
  initialize_cutlass_tensorop_s16816dgrad3d_analytic_bf16_256x128_32x3(manifest);
  initialize_cutlass_tensorop_bf16_s16816fprop3d_optimized_bf16_256x128_32x3(manifest);
  initialize_cutlass_tensorop_bf16_s16816wgrad3d_optimized_bf16_256x128_32x3(manifest);
  initialize_cutlass_tensorop_bf16_s16816dgrad3d_optimized_bf16_256x128_32x3_unity_stride(manifest);
  initialize_cutlass_tensorop_bf16_s16816dgrad3d_analytic_bf16_256x128_32x3(manifest);
}

///////////////////////////////////////////////////////////////////////////////////////////////////

} // namespace library
} // namespace cutlass

